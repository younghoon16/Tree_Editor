# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from game import *


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.window = MainWindow
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(397, 365)
        MainWindow.setStyleSheet("background-color: rgba(255, 242, 204);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 10, 391, 131))
        font = QtGui.QFont()
        font.setPointSize(40)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setStyleSheet("background-color: rgb(255, 242, 204);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.Editor = QtWidgets.QPushButton(self.centralwidget)
        self.Editor.setGeometry(QtCore.QRect(150, 150, 81, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.Editor.setFont(font)
        self.Editor.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.Editor.setStyleSheet("background-color: white;")
        self.Editor.setObjectName("Editor")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(12, 250, 371, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit.setObjectName("lineEdit")
        self.Confirm = QtWidgets.QPushButton(self.centralwidget)
        self.Confirm.setGeometry(QtCore.QRect(150, 300, 81, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.Confirm.setFont(font)
        self.Confirm.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Confirm.setObjectName("Confirm")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(0, 210, 391, 31))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 397, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Tree Editor"))
        self.label.setText(_translate("MainWindow", "Tree Editor"))
        self.Editor.setText(_translate("MainWindow", "编辑"))
        self.Editor.clicked.connect(self.click_edit)
        self.Confirm.setText(_translate("MainWindow", "确定"))
        self.Confirm.clicked.connect(self.click_confirm)
        self.label_2.setText(_translate("MainWindow", "输入序列"))

    def click_edit(self):
        self.window.setVisible(False)
        g = Game(self.window)
        g.run()
        pg.quit()
        self.window.setVisible(True)

    def click_confirm(self):
        text_input = self.lineEdit.text()
        if text_input.strip() == "":
            QMessageBox.information(self.window, "警告", "请输入序列", QMessageBox.Ok)
        else:
            self.window.setVisible(False)
            g = Game(self.window, display=True)
            g.tree_display(text_input.strip().split())
            g.run()
            pg.quit()
            self.window.setVisible(True)

